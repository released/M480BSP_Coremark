; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\retarget.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\retarget.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M480\Include -I..\..\..\Library\StdDriver\inc -I..\..\Template -I..\Coremark -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DMAIN_HAS_NOARGC --omf_browse=.\obj\retarget.crf ..\..\..\Library\StdDriver\src\retarget.c]
                          THUMB

                          AREA ||i.Hard_Fault_Handler||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  Hard_Fault_Handler PROC
                  ||__tagsym$$used||
;;;75      */
;;;76     void Hard_Fault_Handler(uint32_t stack[])
000000  4604              MOV      r4,r0
;;;77     {
;;;78         printf("In Hard Fault Handler\n");
000002  a012              ADR      r0,|L1.76|
000004  f7fffffe          BL       __2printf
000008  a016              ADR      r0,|L1.100|
00000a  6821              LDR      r1,[r4,#0]
00000c  f7fffffe          BL       __2printf
000010  a017              ADR      r0,|L1.112|
000012  6861              LDR      r1,[r4,#4]
000014  f7fffffe          BL       __2printf
000018  a018              ADR      r0,|L1.124|
00001a  68a1              LDR      r1,[r4,#8]
00001c  f7fffffe          BL       __2printf
000020  a019              ADR      r0,|L1.136|
000022  68e1              LDR      r1,[r4,#0xc]
000024  f7fffffe          BL       __2printf
000028  a01a              ADR      r0,|L1.148|
00002a  6921              LDR      r1,[r4,#0x10]
00002c  f7fffffe          BL       __2printf
000030  a01b              ADR      r0,|L1.160|
000032  6961              LDR      r1,[r4,#0x14]
000034  f7fffffe          BL       __2printf
000038  a01c              ADR      r0,|L1.172|
00003a  69a1              LDR      r1,[r4,#0x18]
00003c  f7fffffe          BL       __2printf
000040  a01d              ADR      r0,|L1.184|
000042  69e1              LDR      r1,[r4,#0x1c]
000044  f7fffffe          BL       __2printf
                  |L1.72|
;;;79     
;;;80         stackDump(stack);
;;;81         /* Replace while(1) with chip reset if WDT is not enabled for end product */
;;;82         while(1);
000048  e7fe              B        |L1.72|
;;;83         /* SYS->IPRST0 = SYS_IPRST0_CHIPRST_Msk; */
;;;84     }
;;;85     
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
00004c  496e2048          DCB      "In Hard Fault Handler\n",0
000050  61726420
000054  4661756c
000058  74204861
00005c  6e646c65
000060  720a00  
000063  00                DCB      0
                  |L1.100|
000064  72302020          DCB      "r0  = 0x%x\n",0
000068  3d203078
00006c  25780a00
                  |L1.112|
000070  72312020          DCB      "r1  = 0x%x\n",0
000074  3d203078
000078  25780a00
                  |L1.124|
00007c  72322020          DCB      "r2  = 0x%x\n",0
000080  3d203078
000084  25780a00
                  |L1.136|
000088  72332020          DCB      "r3  = 0x%x\n",0
00008c  3d203078
000090  25780a00
                  |L1.148|
000094  72313220          DCB      "r12 = 0x%x\n",0
000098  3d203078
00009c  25780a00
                  |L1.160|
0000a0  6c722020          DCB      "lr  = 0x%x\n",0
0000a4  3d203078
0000a8  25780a00
                  |L1.172|
0000ac  70632020          DCB      "pc  = 0x%x\n",0
0000b0  3d203078
0000b4  25780a00
                  |L1.184|
0000b8  70737220          DCB      "psr = 0x%x\n",0
0000bc  3d203078
0000c0  25780a00

                          AREA ||i.IsDebugFifoEmpty||, CODE, READONLY, ALIGN=2

                  IsDebugFifoEmpty PROC
;;;626    
;;;627    int IsDebugFifoEmpty(void)
000000  4802              LDR      r0,|L2.12|
;;;628    {
;;;629    #ifndef DISABLE_UART
;;;630        return ((DEBUG_PORT->FIFOSTS & UART_FIFOSTS_TXEMPTYF_Msk) != 0);
000002  6980              LDR      r0,[r0,#0x18]
000004  f3c07000          UBFX     r0,r0,#28,#1
;;;631    #else
;;;632        return 1;
;;;633    #endif
;;;634    }
000008  4770              BX       lr
;;;635    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40070000

                          AREA ||i._ttywrch||, CODE, READONLY, ALIGN=2

                  _ttywrch PROC
;;;645    
;;;646    void _ttywrch(int ch)
000000  4907              LDR      r1,|L3.32|
                  |L3.2|
000002  698a              LDR      r2,[r1,#0x18]
000004  f4120f00          TST      r2,#0x800000
000008  d1fb              BNE      |L3.2|
00000a  6008              STR      r0,[r1,#0]
00000c  280a              CMP      r0,#0xa
;;;647    {
;;;648        SendChar(ch);
;;;649        return;
;;;650    }
00000e  bf18              IT       NE
000010  4770              BXNE     lr
                  |L3.18|
000012  6988              LDR      r0,[r1,#0x18]
000014  f4100f00          TST      r0,#0x800000
000018  d1fb              BNE      |L3.18|
00001a  200d              MOVS     r0,#0xd
00001c  6008              STR      r0,[r1,#0]
00001e  4770              BX       lr
;;;651    
                          ENDP

                  |L3.32|
                          DCD      0x40070000

                          AREA ||i.ferror||, CODE, READONLY, ALIGN=1

                  ferror PROC
;;;739    
;;;740    int ferror(FILE *stream)
000000  f04f30ff          MOV      r0,#0xffffffff
;;;741    {
;;;742        return EOF;
;;;743    }
000004  4770              BX       lr
;;;744    #endif
                          ENDP


                          AREA ||i.fgetc||, CODE, READONLY, ALIGN=2

                  fgetc PROC
;;;719    
;;;720    int fgetc(FILE *stream)
000000  4803              LDR      r0,|L5.16|
                  |L5.2|
000002  6981              LDR      r1,[r0,#0x18]
000004  f4114f80          TST      r1,#0x4000
000008  d1fb              BNE      |L5.2|
00000a  6800              LDR      r0,[r0,#0]
00000c  b2c0              UXTB     r0,r0
;;;721    {
;;;722        return (GetChar());
;;;723    }
00000e  4770              BX       lr
;;;724    
                          ENDP

                  |L5.16|
                          DCD      0x40070000

                          AREA ||i.fputc||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;670    
;;;671    int fputc(int ch, FILE *stream)
000000  4907              LDR      r1,|L6.32|
                  |L6.2|
000002  698a              LDR      r2,[r1,#0x18]
000004  f4120f00          TST      r2,#0x800000
000008  d1fb              BNE      |L6.2|
00000a  6008              STR      r0,[r1,#0]
00000c  280a              CMP      r0,#0xa
;;;672    {
;;;673        SendChar(ch);
;;;674        return ch;
;;;675    }
00000e  bf18              IT       NE
000010  4770              BXNE     lr
                  |L6.18|
000012  698a              LDR      r2,[r1,#0x18]
000014  f4120f00          TST      r2,#0x800000
000018  d1fb              BNE      |L6.18|
00001a  220d              MOVS     r2,#0xd
00001c  600a              STR      r2,[r1,#0]
00001e  4770              BX       lr
;;;676    
                          ENDP

                  |L6.32|
                          DCD      0x40070000

                          AREA ||i.kbhit||, CODE, READONLY, ALIGN=2

                  kbhit PROC
;;;607    
;;;608    int kbhit(void)
000000  4802              LDR      r0,|L7.12|
;;;609    {
;;;610    #ifndef DISABLE_UART
;;;611        return !((DEBUG_PORT->FIFOSTS & UART_FIFOSTS_RXEMPTY_Msk) == 0);
000002  6980              LDR      r0,[r0,#0x18]
000004  f3c03080          UBFX     r0,r0,#14,#1
;;;612    #else
;;;613        return 0;
;;;614    #endif
;;;615    }
000008  4770              BX       lr
;;;616    /**
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      0x40070000

                          AREA ||.data||, DATA, ALIGN=2

                  __stdout
                          DCD      0x00000000

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  __stdin
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\retarget.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_retarget_c_d5a1b03f____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_retarget_c_d5a1b03f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_retarget_c_d5a1b03f____REVSH|
#line 402
|__asm___10_retarget_c_d5a1b03f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_retarget_c_d5a1b03f____RRX|
#line 587
|__asm___10_retarget_c_d5a1b03f____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |HardFault_Handler|
#line 410 "..\\..\\..\\Library\\StdDriver\\src\\retarget.c"
|HardFault_Handler| PROC
#line 411

 MOVS r0, #4
 MOV r1, LR
 TST r0, r1  
 BEQ Stack_Use_MSP  
 MRS R0, PSP  
 B Get_LR_and_Branch
Stack_Use_MSP
 MRS R0, MSP  
Get_LR_and_Branch
 MOV R1, LR  
 LDR R2,= |Hard_Fault_Handler|  
 BX R2
	ENDP

;*** End   embedded assembler ***
