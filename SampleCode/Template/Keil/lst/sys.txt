; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\sys.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\sys.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M480\Include -I..\..\..\Library\StdDriver\inc -I..\..\Template -I..\Coremark -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DMAIN_HAS_NOARGC --omf_browse=.\obj\sys.crf ..\..\..\Library\StdDriver\src\sys.c]
                          THUMB

                          AREA ||i.SYS_ClearResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_ClearResetSrc PROC
;;;42       */
;;;43     void SYS_ClearResetSrc(uint32_t u32Src)
000000  f04f4180          MOV      r1,#0x40000000
;;;44     {
;;;45         SYS->RSTSTS |= u32Src;
000004  684a              LDR      r2,[r1,#4]
000006  4310              ORRS     r0,r0,r2
000008  6048              STR      r0,[r1,#4]
;;;46     }
00000a  4770              BX       lr
;;;47     
                          ENDP


                          AREA ||i.SYS_DisableBOD||, CODE, READONLY, ALIGN=1

                  SYS_DisableBOD PROC
;;;224      */
;;;225    void SYS_DisableBOD(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;226    {
;;;227        SYS->BODCTL &= ~SYS_BODCTL_BODEN_Msk;
000004  6981              LDR      r1,[r0,#0x18]
000006  f0210101          BIC      r1,r1,#1
00000a  6181              STR      r1,[r0,#0x18]
;;;228    }
00000c  4770              BX       lr
;;;229    
                          ENDP


                          AREA ||i.SYS_EnableBOD||, CODE, READONLY, ALIGN=1

                  SYS_EnableBOD PROC
;;;205      */
;;;206    void SYS_EnableBOD(int32_t i32Mode, uint32_t u32BODLevel)
000000  f04f4280          MOV      r2,#0x40000000
;;;207    {
;;;208        /* Enable Brown-out Detector function */
;;;209        SYS->BODCTL |= SYS_BODCTL_BODEN_Msk;
000004  6993              LDR      r3,[r2,#0x18]
000006  f0430301          ORR      r3,r3,#1
00000a  6193              STR      r3,[r2,#0x18]
;;;210    
;;;211        /* Enable Brown-out interrupt or reset function */
;;;212        SYS->BODCTL = (SYS->BODCTL & ~SYS_BODCTL_BODRSTEN_Msk) | (uint32_t)i32Mode;
00000c  6993              LDR      r3,[r2,#0x18]
00000e  f0230308          BIC      r3,r3,#8
000012  4318              ORRS     r0,r0,r3
000014  6190              STR      r0,[r2,#0x18]
;;;213    
;;;214        /* Select Brown-out Detector threshold voltage */
;;;215        SYS->BODCTL = (SYS->BODCTL & ~SYS_BODCTL_BODVL_Msk) | u32BODLevel;
000016  6990              LDR      r0,[r2,#0x18]
000018  f42020e0          BIC      r0,r0,#0x70000
00001c  4308              ORRS     r0,r0,r1
00001e  6190              STR      r0,[r2,#0x18]
;;;216    }
000020  4770              BX       lr
;;;217    
                          ENDP


                          AREA ||i.SYS_GetBODStatus||, CODE, READONLY, ALIGN=1

                  SYS_GetBODStatus PROC
;;;54       */
;;;55     uint32_t SYS_GetBODStatus(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;56     {
;;;57         return ((SYS->BODCTL & SYS_BODCTL_BODOUT_Msk) >> SYS_BODCTL_BODOUT_Pos);
000004  6980              LDR      r0,[r0,#0x18]
000006  f3c01080          UBFX     r0,r0,#6,#1
;;;58     }
00000a  4770              BX       lr
;;;59     
                          ENDP


                          AREA ||i.SYS_GetResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_GetResetSrc PROC
;;;65       */
;;;66     uint32_t SYS_GetResetSrc(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;67     {
;;;68         return (SYS->RSTSTS);
000004  6840              LDR      r0,[r0,#4]
;;;69     }
000006  4770              BX       lr
;;;70     
                          ENDP


                          AREA ||i.SYS_IsRegLocked||, CODE, READONLY, ALIGN=1

                  SYS_IsRegLocked PROC
;;;77       */
;;;78     uint32_t SYS_IsRegLocked(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;79     {
;;;80         return SYS->REGLCTL & 1UL ? 0UL : 1UL;
000004  f8d00100          LDR      r0,[r0,#0x100]
000008  2101              MOVS     r1,#1
00000a  ea210000          BIC      r0,r1,r0
;;;81     }
00000e  4770              BX       lr
;;;82     
                          ENDP


                          AREA ||i.SYS_ReadPDID||, CODE, READONLY, ALIGN=1

                  SYS_ReadPDID PROC
;;;88       */
;;;89     uint32_t  SYS_ReadPDID(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;90     {
;;;91         return SYS->PDID;
000004  6800              LDR      r0,[r0,#0]
;;;92     }
000006  4770              BX       lr
;;;93     
                          ENDP


                          AREA ||i.SYS_ResetCPU||, CODE, READONLY, ALIGN=1

                  SYS_ResetCPU PROC
;;;112      */
;;;113    void SYS_ResetCPU(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;114    {
;;;115        SYS->IPRST0 |= SYS_IPRST0_CPURST_Msk;
000004  6881              LDR      r1,[r0,#8]
000006  f0410102          ORR      r1,r1,#2
00000a  6081              STR      r1,[r0,#8]
;;;116    }
00000c  4770              BX       lr
;;;117    
                          ENDP


                          AREA ||i.SYS_ResetChip||, CODE, READONLY, ALIGN=1

                  SYS_ResetChip PROC
;;;100      */
;;;101    void SYS_ResetChip(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;102    {
;;;103        SYS->IPRST0 |= SYS_IPRST0_CHIPRST_Msk;
000004  6881              LDR      r1,[r0,#8]
000006  f0410101          ORR      r1,r1,#1
00000a  6081              STR      r1,[r0,#8]
;;;104    }
00000c  4770              BX       lr
;;;105    
                          ENDP


                          AREA ||i.SYS_ResetModule||, CODE, READONLY, ALIGN=2

                  SYS_ResetModule PROC
;;;173      */
;;;174    void SYS_ResetModule(uint32_t u32ModuleIndex)
000000  2101              MOVS     r1,#1
;;;175    {
;;;176        uint32_t u32tmpVal = 0UL, u32tmpAddr = 0UL;
;;;177    
;;;178        /* Generate reset signal to the corresponding module */
;;;179        u32tmpVal = (1UL << (u32ModuleIndex & 0x00ffffffUL));
;;;180        u32tmpAddr = (uint32_t)&SYS->IPRST0 + ((u32ModuleIndex >> 24UL));
000002  4a05              LDR      r2,|L10.24|
000004  4081              LSLS     r1,r1,r0              ;179
000006  eb026010          ADD      r0,r2,r0,LSR #24
;;;181        *(uint32_t *)u32tmpAddr |= u32tmpVal;
00000a  6802              LDR      r2,[r0,#0]
00000c  430a              ORRS     r2,r2,r1
;;;182    
;;;183        /* Release corresponding module from reset state */
;;;184        u32tmpVal = ~(1UL << (u32ModuleIndex & 0x00ffffffUL));
;;;185        *(uint32_t *)u32tmpAddr &= u32tmpVal;
00000e  ea220101          BIC      r1,r2,r1
000012  6001              STR      r1,[r0,#0]
;;;186    }
000014  4770              BX       lr
;;;187    
                          ENDP

000016  0000              DCW      0x0000
                  |L10.24|
                          DCD      0x40000008

                          AREA ||i.SYS_SetPowerLevel||, CODE, READONLY, ALIGN=1

                  SYS_SetPowerLevel PROC
;;;238      */
;;;239    void SYS_SetPowerLevel(uint32_t u32PowerLevel)
000000  f04f4180          MOV      r1,#0x40000000
;;;240    {
;;;241        /* Set power voltage level */
;;;242        SYS->PLCTL = (SYS->PLCTL & (~SYS_PLCTL_PLSEL_Msk)) | (u32PowerLevel);
000004  f8d121f8          LDR      r2,[r1,#0x1f8]
000008  f0220203          BIC      r2,r2,#3
00000c  4310              ORRS     r0,r0,r2
00000e  f8c101f8          STR      r0,[r1,#0x1f8]
;;;243    }
000012  4770              BX       lr
;;;244    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\sys.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_sys_c_962b9fbe____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REVSH|
#line 402
|__asm___5_sys_c_962b9fbe____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____RRX|
#line 587
|__asm___5_sys_c_962b9fbe____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
